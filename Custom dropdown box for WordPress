<?php
/*-----------------------------------------------------------------------------------*/
/* Creates dropdown custom meta box */
/*-----------------------------------------------------------------------------------*/
/**
 * Adds a dropdown box to the main column on the 'Speakers' edit screens.
 */


// Add the Meta Box
function add_dropdown_meta_box() {
    add_meta_box(
        'dropdown_meta_box', // $id
        'Topic', // $title 
        'show_dropdown_meta_box', // $callback
        'speakers', // $page
        'normal', // $context
        'high'); // $priority
}
add_action('add_meta_boxes', 'add_dropdown_meta_box');

// Field Array
$prefix = 'dropdown_';
$dropdown_meta_fields = array(
array(
        'label'=> 'Select Box',
        'desc'  => 'Select a topic for each speaker.',
        'id'    => $prefix.'select',
        'type'  => 'select',
        'options' => array (
            'one' => array (
                'label' => 'Artificial Intelligence',
                'value' => 'ai'
            ),
            'two' => array (
                'label' => 'Manufacturing',
                'value' => 'manufacturing'
            ),
            'three' => array (
                'label' => '3D Printing',
                'value' => '3d'
            )
        )
    )
);

// The Callback
function show_dropdown_meta_box() {
global $dropdown_meta_fields, $post;
// Use nonce for verification
echo '<input type="hidden" name="dropdown_meta_box_nonce" value="'.wp_create_nonce(basename(__FILE__)).'" />';
     
    // Begin the field table and loop
    echo '<table class="form-table">';
    foreach ($dropdown_meta_fields as $field) {
        // get value of this field if it exists for this post
        $meta = get_post_meta($post->ID, $field['id'], true);
        // begin a table row with
        echo '<tr>
                <th><label for="'.$field['id'].'">'.$field['label'].'</label></th>
                <td>';
                switch($field['type']) {
                    // case items will go here
// select
case 'select':
    echo '<select name="'.$field['id'].'" id="'.$field['id'].'">';
    foreach ($field['options'] as $option) {
        echo '<option', $meta == $option['value'] ? ' selected="selected"' : '', ' value="'.$option['value'].'">'.$option['label'].'</option>';
    }
    echo '</select><br /><span class="description">'.$field['desc'].'</span>';
break;
                } //end switch
        echo '</td></tr>';
    } // end foreach
    echo '</table>'; // end table
}



// Save the Data
function save_dropdown_meta($post_id) {
    global $dropdown_meta_fields;
     
    // verify nonce
    if (!wp_verify_nonce($_POST['dropdown_meta_box_nonce'], basename(__FILE__))) 
        return $post_id;
    // check autosave
    if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE)
        return $post_id;
    // check permissions
    if ('page' == $_POST['speakers']) {
        if (!current_user_can('edit_page', $post_id))
            return $post_id;
        } elseif (!current_user_can('edit_post', $post_id)) {
            return $post_id;
    }
     
    // loop through fields and save the data
    foreach ($dropdown_meta_fields as $field) {
        $old = get_post_meta($post_id, $field['id'], true);
        $new = $_POST[$field['id']];
        if ($new && $new != $old) {
            update_post_meta($post_id, $field['id'], $new);
        } elseif ('' == $new && $old) {
            delete_post_meta($post_id, $field['id'], $old);
        }
    } // end foreach
}
add_action('save_post', 'save_dropdown_meta');

/*-----------------------------------------------------------------------------------*/
/* End of new dropdown custom field */
/*-----------------------------------------------------------------------------------*/
?>
